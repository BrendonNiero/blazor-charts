@page "/"
@inject IJSRuntime JS
@using Components;

<PageTitle>Home</PageTitle>

<NavMenu />
<section class="header-home">
    <h1 class="title-header">Integre facilmente componentes gráficos em suas <span class="gradient-text">aplicações Blazor.</span></h1>
    <p>Dê vida à sua aplicação Blazor com gráficos dinâmicos e intuitivos.</p>
    <div class="flex-i-center">
        <NavLink href="/doc" class="btn-green flex-i-center">Começar</NavLink>
        <button class="btn">Modelos</button>
    </div>
</section>

<section class="types-charts-section">
    <h1 class="title-header-types">Visualize seus dados com o <span class="gradient-text">gráfico ideal</span></h1>
    <div class="chart-type-list">
        <div class="card-type">
            <h3 class="title-type-card">Gráfico de Linhas</h3>
            <p>Perfeito para visualizar mudanças ao longo do tempo.</p>
        </div>
        <div class="card-type">
            <h3 class="title-type-card">Gráfico de Barras</h3>
            <p>Ideal para comparar diferentes categorias e acompanhar tendências.</p>
        </div>
        <div class="card-type">
            <h3 class="title-type-card">Gráfico de Pizza</h3>
            <p>Compare proporções e distribuições de dados de forma visual e intuitiva.</p>
        </div>
    </div>
    <div class="chart-type-list">
        <div class="card-type">
            <h3 class="title-type-card">Gráfico de Área</h3>
            <p>Combine a estética de um gráfico de linhas com o destaque das áreas preenchidas.</p>
        </div>
        <div class="card-type">
            <h3 class="title-type-card">Gráfico de Dispersão</h3>
            <p>Analise correlações e padrões entre diferentes conjuntos de dados.</p>
        </div>
        <div class="card-type">
            <h3 class="title-type-card">Gráfico Radar</h3>
            <p>Compare múltiplas variáveis em um formato radial envolvente.</p>
        </div>
    </div>
</section>

<section class="chart-list p-page">
    <blazor_chart_webassembly.Components.ChartLine ChartType="line" Labels="@labels1" DataPoints="@data1" BackgroundColors="@colors1" />
    <blazor_chart_webassembly.Components.BarChart.DoubleBarChart Labels="@labels2"/>
    <div class="list-roundeds">
            <blazor_chart_webassembly.Components.RoundedChart.ChartDoughnut Labels="@labelsDoughnut" DataPoints="@dataDoughnut" BackgroundColors="@colorsDoughnut" />
            <blazor_chart_webassembly.Components.RoundedChart.ChartPie Labels="@labelsDoughnut" DataPoints="@dataDoughnut" BackgroundColors="@colorsDoughnut" />
            <blazor_chart_webassembly.Components.RoundedChart.ChartPolarArea Labels="@labelsDoughnut" DataPoints="@dataDoughnut" BackgroundColors="@colorsDoughnut" />
    </div>
</section>

@code {
    public List<string> labels2 = new() { "Jan", "Fev", "Mar", "Abr", "", "", "", ""};
    public List<string> labels1 = new() { "Jan", "Fev", "Mar", "", "", "", "", "", "", "", "" };
    public List<int> data1 = new() { 10, 50, 30, 55, 66, 11, 42, 80, 90, 11, 50 };
    public List<string> colors1 = new() { "#3fc598" };

    public List<string> labelsDoughnut = new() { "Jan", "Fev", "Mar"};
    public List<int> dataDoughnut = new() { 60, 80, 39 };
    public List<string> colorsDoughnut = new() { "#8c98ff", "#2cc295", "#03624c" };
}